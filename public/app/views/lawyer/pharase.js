// Generated by CoffeeScript 1.12.5
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  $(function() {
    ppu.LawyerPharase = (function(superClass) {
      extend(LawyerPharase, superClass);

      function LawyerPharase() {
        return LawyerPharase.__super__.constructor.apply(this, arguments);
      }

      LawyerPharase.prototype.urlRoot = "/api/lawyrs/pharases";

      return LawyerPharase;

    })(Backbone.Model);
    ppu.LawyerPharases = (function(superClass) {
      extend(LawyerPharases, superClass);

      function LawyerPharases() {
        return LawyerPharases.__super__.constructor.apply(this, arguments);
      }

      LawyerPharases.prototype.url = "/api/lawyrs/pharases";

      LawyerPharases.prototype.model = ppu.LawyerPharase;

      return LawyerPharases;

    })(Backbone.Collection);
    ppu.LawyerPharaseCreate = (function(superClass) {
      extend(LawyerPharaseCreate, superClass);

      function LawyerPharaseCreate() {
        return LawyerPharaseCreate.__super__.constructor.apply(this, arguments);
      }

      LawyerPharaseCreate.prototype.el = $("#lawyer-form-phrase");

      LawyerPharaseCreate.prototype.template = $("#lawyer-form-phrase-template");

      LawyerPharaseCreate.prototype.events = {
        'click .lawyer-add-phrase': 'addForm'
      };

      LawyerPharaseCreate.prototype.initialize = function() {
        this.appendForm();
        return app.pubsub.bind('lawyer:stored', this.store, this);
      };

      LawyerPharaseCreate.prototype.appendForm = function() {
        return ppu.appendForm(this.el, this.template);
      };

      LawyerPharaseCreate.prototype.addForm = function(e) {
        e.preventDefault();
        return this.appendForm();
      };

      LawyerPharaseCreate.prototype.store = function(data) {
        return ppu.saveMultipeForms(this.el, this.model, data.id);
      };

      return LawyerPharaseCreate;

    })(Backbone.View);
    ppu.LawyerPhrasesEditModal = (function(superClass) {
      extend(LawyerPhrasesEditModal, superClass);

      function LawyerPhrasesEditModal() {
        return LawyerPhrasesEditModal.__super__.constructor.apply(this, arguments);
      }

      LawyerPhrasesEditModal.prototype.el = $("#lawyer-phrase-edit-modal");

      LawyerPhrasesEditModal.prototype.template = $("#lawyer-form-phrase-template");

      _.extend(LawyerPhrasesEditModal.prototype, mixins.lawyerRelationshipModalEdit);

      return LawyerPhrasesEditModal;

    })(Backbone.View);
    ppu.LawyerPharaseView = (function(superClass) {
      extend(LawyerPharaseView, superClass);

      function LawyerPharaseView() {
        return LawyerPharaseView.__super__.constructor.apply(this, arguments);
      }

      LawyerPharaseView.prototype.tagName = 'li';

      LawyerPharaseView.prototype.template = $('#lawyer-phrase-template');

      LawyerPharaseView.prototype.modal = ppu.LawyerPhrasesEditModal;

      _.extend(LawyerPharaseView.prototype, mixins.lawyerRelationshipView);

      return LawyerPharaseView;

    })(Backbone.View);
    ppu.LawyerPhraseModalCreate = (function(superClass) {
      extend(LawyerPhraseModalCreate, superClass);

      function LawyerPhraseModalCreate() {
        return LawyerPhraseModalCreate.__super__.constructor.apply(this, arguments);
      }

      LawyerPhraseModalCreate.prototype.el = $("#lawyer-relationship-create-modal");

      LawyerPhraseModalCreate.prototype.template = $("#lawyer-form-phrase-template");

      _.extend(LawyerPhraseModalCreate.prototype, mixins.lawyerRelationshipModalCreate);

      return LawyerPhraseModalCreate;

    })(Backbone.View);
    return ppu.LawyerPharasesEdit = (function(superClass) {
      extend(LawyerPharasesEdit, superClass);

      function LawyerPharasesEdit() {
        return LawyerPharasesEdit.__super__.constructor.apply(this, arguments);
      }

      LawyerPharasesEdit.prototype.el = $("#lawyer-phrase-edit");

      LawyerPharasesEdit.prototype.view = ppu.LawyerPharaseView;

      LawyerPharasesEdit.prototype.modal = ppu.LawyerPhraseModalCreate;

      _.extend(LawyerPharasesEdit.prototype, mixins.lawyerRelationshipViews);

      return LawyerPharasesEdit;

    })(Backbone.View);
  });

}).call(this);
